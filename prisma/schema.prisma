// schema.prisma

generator client {
  provider = "prisma-client-js"
}

generator json {
  provider = "prisma-json-types-generator"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model nft {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  seq          Int    @unique
  transport_id Int
  nft_id       String
  sealed_dt    Int

  character_name String @unique
  class          Int
  lvl            Int
  price          Int

  power_score  Int
  mirage_score Int
  mira_x       Int

  world_name String
  trade_type Int
  reinforce  Int

  // stats
  // training
  // buildings
  // assets
  // potentials
  // holy_stuff
  // succession
  // equip_items

  /// [nft_stats]
  stats       Json
  /// [nft_skills]
  skills      Json
  /// [nft_training]
  training    Json
  buildings   Json
  /// [nft_assets]
  assets      Json
  /// [nft_potentials]
  potentials  Json
  /// [nft_holy_stuff]
  holy_stuff  Json
  /// [nft_succession]
  succession  Json
  /// [nft_equip_items]
  equip_items Json
  /// [nft_codex]
  codex Json

  spirits_id        String @db.ObjectId
  magic_orb_id      String @db.ObjectId
  inventory_id      String @db.ObjectId
  magic_stone_id    String @db.ObjectId
  mystical_piece_id String @db.ObjectId
}

model spirits {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  /// [nft_spirit_equip]
  equip Json
  /// [nft_spirit_inven]
  inven Json
}

model magic_orb {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  /// [nft_magic_orb_equip_item]
  equip_item Json
}

model magic_stone {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  /// [nft_magic_stone_equip_item]
  equip_item  Json
  active_deck Int
}

model mystical_piece {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  /// [nft_mystical_piece_equip_item]
  equip_item  Json
  active_deck Int
}

model inventory {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  /// [nft_inventory]
  inventory  Json
}
